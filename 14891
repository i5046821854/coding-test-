#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>
#include <string>

using namespace std;

string top[4];
int num;
vector<pair<int, int>> vec;

int score(void)
{
    return (top[0][0] - '0') + (top[1][0] - '0') * 2 + (top[2][0] - '0') * 4 + (top[3][0] - '0') * 8;
}

string ban(string str)
{
    char ch = str[0];
    str.erase(0, 1);
    str = str + ch;
    //cout << str << endl;
    return str;
}

string si(string str)
{
    char ch = str[str.size() - 1];
    str.erase(str.size() - 1, 1);
    str = ch + str;
    //cout << str;
    return str;
}

void move(int num, int dir, int left)
{
    if (left == 0)
    {
        if (num == 0)
            return;
        if (top[num - 1][2] != top[num][6])
        {
            if (dir == -1) {
                    move(num - 1, 1, left);
                top[num - 1] = si(top[num - 1]);
            }
            else {
                    move(num - 1, -1, left);
                top[num - 1] = ban(top[num - 1]);
            }
        }
    }
    else if (left == 1) {
        if (num == 3)
            return;
        if (top[num + 1][6] != top[num][2])
        {
            if (dir == 1) {
                    move(num + 1, -1, 1);
                top[num + 1] = ban(top[num + 1]);
            }
            else {
                    move(num + 1, 1, 1);
                top[num + 1] = si(top[num + 1]);
            }
        }

    }
}


int main(void) {
    for (int i = 0; i < 4; i++)
    {
        cin >> top[i];
    }
    int num;
    cin >> num;
    int result = 0;
    for (int i = 0; i < num; i++)
    {

        int a, b;
        cin >> a >> b;
        move(a - 1, b, 0);
        move(a - 1, b, 1);
        if (b == 1)
        {
            top[a - 1] = si(top[a - 1]);
        }
        else {
            top[a - 1] = ban(top[a - 1]);
        }
    }
    cout << score();
    return 0;
}
