#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;
int arr[51][51] = { 0, };
int visit[51][51] = { 0, };
int hor[4] = { 0,1,0,-1 };
int ver[4] = { 1,0,-1,0 };
vector<pair<int, int>> vec;


int a, low, high;
int temp = 0;
int num = 0;
void move(int row, int col) {
	//printf("%d %d\n", row, col);
	int nrow, ncol;
	vec.push_back(make_pair(row, col));
	temp += arr[row][col];
	num++;
	for (int i = 0; i < 4; i++)
	{
		nrow = row + ver[i];
		ncol = col + hor[i];
		if (nrow < 0 || nrow >= a || ncol < 0 || ncol >= a || visit[nrow][ncol] == 1)
			continue;
		int diff = arr[row][col] - arr[nrow][ncol];
		if((diff * diff >= low * low) && (diff * diff <= high * high))
		{
			visit[nrow][ncol] = 1;
			move(nrow, ncol);
		}
	}
}

void change(int number)
{
	for (int i = 0; i < num; i++)
	{
		arr[vec[i].first][vec[i].second] = number;
	}
}

int main(void)
{
	int result = -1;
	int day = 0;
	cin >> a >> low >> high;
	for (int i = 0; i < a; i++)
	{
		for (int j = 0; j < a; j++)
		{
			cin >> arr[i][j];
		}
	}
	while (1) {
		//printf("sad\n");
		result++;
		day = 0;
		for (int i = 0; i < a; i++)
		{
			for (int j = 0; j < a; j++)
			{
				if (visit[i][j] == 0)
				{
					visit[i][j] = 1;
					move(i, j);
					if (num != 1) {
						day++;
						//printf("%d %d", temp, num);
						change((int)temp / num);
					}
					vec.clear();
				}
				num = 0;
				temp = 0;
			}
		}
		if (day == 0)
			break;
		for (int i = 0; i < a; i++)
		{
			for (int j = 0; j < a; j++)
			{
				//printf("%d ", arr[i][j]);
				visit[i][j] = 0;
			}
			//printf("\n");
		}
	}
	printf("%d", result);
}
