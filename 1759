#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;
vector<char> vec;

int N, K;
void dfs(string str, char ch, int idx, int num, int vowel) {
	str.push_back(ch);
	if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')
	{
		vowel++;
	}
	if (num == N)
	{
		int consonant = N - vowel;
		if(consonant >= 2 && vowel >= 1)	
			cout << str << endl;
		return;
	}
	else
	{
		for (int i = idx; i < K; i++)
		{
			dfs(str, vec[i], i+1, num+1, vowel);
		}
	}
}
int main(void) {
	cin >> N >> K;
	char a;
	for (int i = 0; i < K; i++)
	{
		cin >> a;
		vec.push_back(a);
	}
	sort(vec.begin(), vec.end());
	string str;
	for (int i = 0; i < K; i++)
	{
		dfs(str, vec[i], i+1, 1,0);
	}
}
