#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <queue>
using namespace std;

queue<pair<int, int>>pq;
int arr[100][100];
int dist[100][100] = { 0, };
int hor[4] = {0,1,0,-1};
int ver[4] = {-1,0,1,0};

void move(int x, int y)
{
	int nx, ny;
	while (!pq.empty())
	{
		x = pq.front().first;
		y = pq.front().second;
		pq.pop();
		for (int i = 0; i < 4; i++)
		{
			nx = x + ver[i];
			ny = y + hor[i];
			printf("%d %d\n", dist[x][y], dist[nx][ny]);
			if (arr[nx][ny] == 0)
			{
				if (dist[x][y] < dist[nx][ny])
				{
					dist[nx][ny] = dist[x][y];
					pq.push({ x,y });
				}
			}
			else if (arr[nx][ny] == 1)
			{
				if (dist[x][y] + 1 < dist[nx][ny])
				{
					dist[nx][ny] = dist[x][y] + 1;
					pq.push({ x,y });
				}

			}
			
		}
	}
}

int main(void) {
	int row, col;
	char temp;
	cin >> row >> col;
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			cin >> temp;
			arr[i][j] = temp - '0';
			dist[i][j] = 987654231;
		}
	}
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			printf("%d ", arr[i][j]);
		}
		printf("\n");
	}
	dist[0][0] = 0;
	pq.push({ 0,0 });
	move(0, 0);
	printf("%d", dist[row - 1][col - 1]);
}
